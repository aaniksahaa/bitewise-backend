version: '3.8'

services:
  # Supabase PostgreSQL Database
  supabase-db:
    image: supabase/postgres:15.1.1.78
    container_name: bitewise-supabase-db
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: supabase_admin
      POSTGRES_PASSWORD: ${SUPABASE_DB_PASSWORD:-your_supabase_password}
      POSTGRES_HOST: supabase-db
      POSTGRES_PORT: 5432
    volumes:
      - supabase_db_data:/var/lib/postgresql/data
      - ./supabase/seed.sql:/docker-entrypoint-initdb.d/seed.sql
    ports:
      - "54322:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U supabase_admin -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bitewise-network

  # Supabase Auth
  supabase-auth:
    image: supabase/gotrue:v2.143.0
    container_name: bitewise-supabase-auth
    depends_on:
      supabase-db:
        condition: service_healthy
    environment:
      GOTRUE_API_HOST: 0.0.0.0
      GOTRUE_API_PORT: 9999
      API_EXTERNAL_URL: ${API_EXTERNAL_URL:-http://localhost:54321}
      GOTRUE_DB_DRIVER: postgres
      GOTRUE_DB_DATABASE_URL: postgres://supabase_admin:${SUPABASE_DB_PASSWORD:-your_supabase_password}@supabase-db:5432/postgres?search_path=auth
      GOTRUE_SITE_URL: ${GOTRUE_SITE_URL:-http://localhost:3000}
      GOTRUE_URI_ALLOW_LIST: ${GOTRUE_URI_ALLOW_LIST:-*}
      GOTRUE_DISABLE_SIGNUP: ${GOTRUE_DISABLE_SIGNUP:-false}
      GOTRUE_JWT_SECRET: ${GOTRUE_JWT_SECRET:-your-super-secret-jwt-token-with-at-least-32-characters-long}
      GOTRUE_JWT_EXP: ${GOTRUE_JWT_EXP:-3600}
      GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
      GOTRUE_JWT_ADMIN_ROLES: service_role
      GOTRUE_JWT_AUD: authenticated
      GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
      GOTRUE_EXTERNAL_GOOGLE_ENABLED: ${GOTRUE_EXTERNAL_GOOGLE_ENABLED:-true}
      GOTRUE_EXTERNAL_GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID:-}
      GOTRUE_EXTERNAL_GOOGLE_SECRET: ${GOOGLE_CLIENT_SECRET:-}
      GOTRUE_EXTERNAL_GOOGLE_REDIRECT_URI: ${GOOGLE_CALLBACK_URL:-http://localhost:54321/auth/v1/callback}
    ports:
      - "54324:9999"
    networks:
      - bitewise-network

  # Supabase REST API
  supabase-rest:
    image: postgrest/postgrest:v12.0.1
    container_name: bitewise-supabase-rest
    depends_on:
      supabase-db:
        condition: service_healthy
    environment:
      PGRST_DB_URI: postgres://authenticator:${SUPABASE_DB_PASSWORD:-your_supabase_password}@supabase-db:5432/postgres
      PGRST_DB_SCHEMAS: public,storage,graphql_public
      PGRST_DB_ANON_ROLE: anon
      PGRST_JWT_SECRET: ${GOTRUE_JWT_SECRET:-your-super-secret-jwt-token-with-at-least-32-characters-long}
      PGRST_DB_USE_LEGACY_GUCS: "false"
      PGRST_APP_SETTINGS_JWT_SECRET: ${GOTRUE_JWT_SECRET:-your-super-secret-jwt-token-with-at-least-32-characters-long}
      PGRST_APP_SETTINGS_JWT_EXP: ${GOTRUE_JWT_EXP:-3600}
    ports:
      - "54321:3000"
    networks:
      - bitewise-network

  # Supabase Storage
  supabase-storage:
    image: supabase/storage-api:v0.46.4
    container_name: bitewise-supabase-storage
    depends_on:
      supabase-db:
        condition: service_healthy
      supabase-rest:
        condition: service_started
    environment:
      ANON_KEY: ${SUPABASE_ANON_KEY:-eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0}
      SERVICE_KEY: ${SUPABASE_SERVICE_KEY:-eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU}
      POSTGREST_URL: http://supabase-rest:3000
      PGRST_JWT_SECRET: ${GOTRUE_JWT_SECRET:-your-super-secret-jwt-token-with-at-least-32-characters-long}
      DATABASE_URL: postgres://supabase_storage_admin:${SUPABASE_DB_PASSWORD:-your_supabase_password}@supabase-db:5432/postgres
      FILE_SIZE_LIMIT: 52428800
      STORAGE_BACKEND: file
      FILE_STORAGE_BACKEND_PATH: /var/lib/storage
      TENANT_ID: stub
      REGION: stub
      GLOBAL_S3_BUCKET: stub
      ENABLE_IMAGE_TRANSFORMATION: "true"
      IMGPROXY_URL: http://supabase-imgproxy:5001
    volumes:
      - supabase_storage_data:/var/lib/storage
    ports:
      - "54325:5000"
    networks:
      - bitewise-network

  # Image Proxy for Storage
  supabase-imgproxy:
    image: darthsim/imgproxy:v3.8.0
    container_name: bitewise-supabase-imgproxy
    environment:
      IMGPROXY_BIND: ":5001"
      IMGPROXY_LOCAL_FILESYSTEM_ROOT: /
      IMGPROXY_USE_ETAG: "true"
      IMGPROXY_ENABLE_WEBP_DETECTION: ${IMGPROXY_ENABLE_WEBP_DETECTION:-true}
    volumes:
      - supabase_storage_data:/var/lib/storage:ro
    ports:
      - "54326:5001"
    networks:
      - bitewise-network

  # FastAPI Backend
  api:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: bitewise-api
    environment:
      # Application
      ENVIRONMENT: ${ENVIRONMENT:-production}
      SECRET_KEY: ${SECRET_KEY}
      
      # Database - Use Supabase DB
      DATABASE_URL: postgresql://supabase_admin:${SUPABASE_DB_PASSWORD:-your_supabase_password}@supabase-db:5432/postgres
      
      # Supabase Configuration
      SUPABASE_URL: http://supabase-rest:3000
      SUPABASE_KEY: ${SUPABASE_ANON_KEY:-eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0}
      SUPABASE_BUCKET_NAME: ${SUPABASE_BUCKET_NAME:-chat-images}
      
      # External APIs
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      YOUTUBE_V3_API_KEY: ${YOUTUBE_V3_API_KEY}
      
      # Email
      RESEND_API_KEY: ${RESEND_API_KEY}
      EMAIL_FROM: ${EMAIL_FROM}
      
      # OAuth
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GOOGLE_CALLBACK_URL: ${GOOGLE_CALLBACK_URL}
      
      # File Upload
      MAX_FILE_SIZE_MB: ${MAX_FILE_SIZE_MB:-10}

      # Frontend
      FRONTEND_URL: ${FRONTEND_URL}
    ports:
      - "8000:8000"
    depends_on:
      supabase-db:
        condition: service_healthy
      supabase-rest:
        condition: service_started
      supabase-auth:
        condition: service_started
      supabase-storage:
        condition: service_started
    volumes:
      - ./logs:/app/logs
    networks:
      - bitewise-network
    restart: unless-stopped

volumes:
  supabase_db_data:
  supabase_storage_data:

networks:
  bitewise-network:
    driver: bridge