name: CI

on:
  push:
    branches: [ main, 'test/*' ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Basic syntax check
      run: |
        python -m py_compile app/**/*.py
      continue-on-error: true

  test:
    runs-on: ubuntu-latest
    env:
      # Required environment variables for tests
      SECRET_KEY: "test-secret-key-for-ci-only"
      ENVIRONMENT: "development"  # Use development so it picks up LOCAL_DATABASE_URL
      LOCAL_DATABASE_URL: "sqlite:///./test.db"
      DATABASE_URL: "sqlite:///./test.db"  # Fallback in case needed
      OPENAI_API_KEY: "test-key"
      SUPABASE_URL: "https://test.supabase.co"
      SUPABASE_KEY: "test-key"
      RESEND_API_KEY: "test-key"
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Create test database directory
      run: |
        mkdir -p ./tests
        chmod 755 ./tests
    - name: Test with pytest
      run: |
        pytest tests/ -v --tb=short --disable-warnings
    - name: Clean up test files
      if: always()
      run: |
        rm -f ./test.db
        rm -f ./.coverage 