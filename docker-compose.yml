version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: bitewise-db
    environment:
      POSTGRES_DB: bitewise_dev
      POSTGRES_USER: bitewise
      POSTGRES_PASSWORD: your_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bitewise -d bitewise_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bitewise-network

  # FastAPI Backend
  api:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: bitewise-api
    environment:
      # Application
      ENVIRONMENT: development
      SECRET_KEY: ${SECRET_KEY:-dev_secret_key_change_in_production}
      
      # Database
      LOCAL_DATABASE_URL: postgresql://bitewise:your_password@db:5432/bitewise_dev
      DATABASE_URL: postgresql://bitewise:your_password@db:5432/bitewise_dev
      
      # External APIs (set these in .env file)
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      YOUTUBE_V3_API_KEY: ${YOUTUBE_V3_API_KEY:-}
      SUPABASE_URL: ${SUPABASE_URL:-}
      SUPABASE_KEY: ${SUPABASE_KEY:-}
      SUPABASE_BUCKET_NAME: ${SUPABASE_BUCKET_NAME:-chat-images}
      
      # Email
      RESEND_API_KEY: ${RESEND_API_KEY:-}
      EMAIL_FROM: ${EMAIL_FROM:-noreply@bitewise.io}
      EMAIL_FROM_NAME: ${EMAIL_FROM_NAME:-BiteWise}
      
      # OAuth
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID:-}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET:-}
      GOOGLE_CALLBACK_URL: ${GOOGLE_CALLBACK_URL:-http://localhost:8000/api/v1/auth/google/callback}
      
      # File Upload
      MAX_FILE_SIZE_MB: ${MAX_FILE_SIZE_MB:-10}

      # Frontend
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:8080}
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
      - ./.env:/app/.env:ro
    networks:
      - bitewise-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis (optional, for caching)
  # redis:
  #   image: redis:7-alpine
  #   container_name: bitewise-redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - bitewise-network
  #   restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  bitewise-network:
    driver: bridge 